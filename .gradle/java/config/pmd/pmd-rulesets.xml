<?xml version="1.0"?>

<ruleset name="PMD-Rules">
    <rule ref="rulesets/java/basic.xml/JumbledIncrementer">						
        <priority>1</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation">						
        <priority>5</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">						
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck">						
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidThreadGroup">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck">						
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/CheckResultSet">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">						
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/DontCallThreadRun">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/ExtendsObject">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/CheckSkipResult">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop">						
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/basic.xml/DontCallThreadRun">						
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices">						
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/clone.xml/ProperCloneImplementation">						
        <priority>2</priority>
    </rule> 
    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">						
        <priority>2</priority>
    </rule>
    
    <rule ref="rulesets/java/codesize.xml/NPathComplexity">		
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ModifiedCyclomaticComplexity" reportLevel="12">		
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount"> <!--default percent 45-->        
        <priority>5</priority>
        <properties>
            <property name="violationSuppressXPath" value="
            //ClassOrInterfaceBodyDeclaration/Annotation/MarkerAnnotation//Name[@Image='Test'] | 
            //ClassOrInterfaceBodyDeclaration/Annotation/MarkerAnnotation//Name[@Image='Override']"/>
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyFields">	<!--default value 15-->				
        <priority>5</priority>
    </rule>
    
    <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AssignmentInOperand">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DontImportSun">			
        <priority>4</priority>
    </rule>
    
    <rule ref="rulesets/java/design.xml/UseUtilityClass">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">			
        <priority>5</priority>
        <properties>
            <property name="problemDepth" value="5"/>
        </properties>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchDensity">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">			
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CloseResource">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonStaticInitializer">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/BadComparison">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/EqualsNull">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/IdempotentOperations">			
        <priority>3</priority>
    </rule> 
    <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyConditional">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">			
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UncommentedEmptyMethodBody">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidConstantsInterface">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PreserveStackTrace">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SingularField">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/LogicInversion">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected">			
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/SystemPrintln">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/NoPackage">			
        <priority>5</priority>
    </rule>
    
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AddEmptyString">			
        <priority>5</priority>
    </rule>
    
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">			
        <priority>3</priority>
        <properties>
            <property name="violationSuppressXPath" value="
            //ClassOrInterfaceBodyDeclaration/Annotation/MarkerAnnotation//Name[@Image='Override']"/>
        </properties>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/strings.xml/StringInstantiation">			
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AppendCharacterWithChar">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidStringBufferField">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/typeresolution.xml/LooseCoupling">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">			
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">			
        <priority>3</priority>
    </rule>
    
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary">			
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn">						
        <priority>5</priority>
    </rule> 
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier">						
        <priority>5</priority>
    </rule> 
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">						
        <priority>5</priority>
    </rule> 
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">						
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">						
        <priority>5</priority>
    </rule>
   
</ruleset>